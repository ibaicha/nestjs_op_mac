import { Body, Controller, Delete, Get, Param, ParseIntPipe, Post, Put, Req} from '@nestjs/common';
import { UseGuards } from '@nestjs/common/decorators/core/use-guards.decorator';
import { FamilleChargeExploitationService } from  './famille_charge_exploitation.service';
import { AuthGuard } from '@nestjs/passport';
import { CreateFamilleChargeExploitationDto } from './dto/createFamilleChargeExploitation.dto';
import { UpdateFamilleChargeExploitationDto } from './dto/updateFamilleChargeExploitation.dto';
import { Request } from 'express';
import { ApiBearerAuth, ApiTags } from '@nestjs/swagger';


@ApiTags('FamilleChargeExploitation')
@Controller('familleChargeExploitations')
export class FamilleChargeExploitationController {
    constructor(private readonly familleChargeExploitationService: FamilleChargeExploitationService) {}

    @Get()
    getAll() {
        return this.familleChargeExploitationService.getAll();
    }

    @Get("/:id")
    get(@Param("id", ParseIntPipe) familleChargeExploitationId : number, createFamilleChargeExploitationDto: CreateFamilleChargeExploitationDto) {
        return this.familleChargeExploitationService.getOne(familleChargeExploitationId); 
    }
   

    @ApiBearerAuth()
    @UseGuards(AuthGuard('jwt'))
    @Post("create")
    create(@Body() createFamilleChargeExploitationDto: CreateFamilleChargeExploitationDto) {
        return this.familleChargeExploitationService.create(createFamilleChargeExploitationDto);
        
    }


    @ApiBearerAuth()
    @UseGuards(AuthGuard('jwt'))
    @Delete("delete/:id")
    delete(@Param("id", ParseIntPipe) familleChargeExploitationId : number, createFamilleChargeExploitationDto: CreateFamilleChargeExploitationDto, @Req() request : Request) {
        return this.familleChargeExploitationService.delete(familleChargeExploitationId); 
    }

    @ApiBearerAuth()
    @UseGuards(AuthGuard('jwt'))
    @Put("update/:id")
    update(
        @Param("id", ParseIntPipe) familleChargeExploitationId : number,
        @Body() updateFamilleChargeExploitationDto: UpdateFamilleChargeExploitationDto,
        ) {
        return this.familleChargeExploitationService.update(familleChargeExploitationId, updateFamilleChargeExploitationDto); 
    }
   
    
    
}


import { Body, Controller, Delete, Get, Param, ParseIntPipe, Post, Put, Req} from '@nestjs/common';
import { UseGuards } from '@nestjs/common/decorators/core/use-guards.decorator';
import { ExploitationChargeExploitationService } from './exploitation_charge_exploitation.service';
import { AuthGuard } from '@nestjs/passport';
import { CreateExploitationChargeExploitationDto } from './dto/createExploitationChargeExploitation.dto';
import { UpdateExploitationChargeExploitationDto } from './dto/updateExploitationChargeExploitation.dto';
import { Request } from 'express';
import { ApiBearerAuth, ApiTags } from '@nestjs/swagger';


@ApiTags('ExploitationChargeExploitation')
@Controller('exploitationChargeExploitations')
export class ExploitationChargeExploitationController {
    constructor(private readonly exploitationChargeExploitationService: ExploitationChargeExploitationService) {}

    @Get()
    getAll() {
        return this.exploitationChargeExploitationService.getAll();
    }
    @Get("/custom")
    getAllCustom() {
        return this.exploitationChargeExploitationService.getAllCustom();
    }
    @Get("/:id")
    get(@Param("id", ParseIntPipe) exploitationChargeExploitationId : number, createExploitationChargeExploitationDto: CreateExploitationChargeExploitationDto) {
        return this.exploitationChargeExploitationService.getOne(exploitationChargeExploitationId); 
    }
    
    @Get("exploitationId/:id")
    getByExploitationId(@Param("id", ParseIntPipe) exploitationId : number, createExploitationChargeExploitationDto: CreateExploitationChargeExploitationDto) {
        return this.exploitationChargeExploitationService.getByExploitationId(exploitationId); 
    }
   

    @ApiBearerAuth()
    @UseGuards(AuthGuard('jwt'))
    @Post("create")
    create(@Body() createExploitationChargeExploitationDto: CreateExploitationChargeExploitationDto) {
        return this.exploitationChargeExploitationService.create(createExploitationChargeExploitationDto);
        
    }


    @ApiBearerAuth()
    @UseGuards(AuthGuard('jwt'))
    @Delete("delete/:id")
    delete(@Param("id", ParseIntPipe) exploitationChargeExploitationId : number, createExploitationChargeExploitationDto: CreateExploitationChargeExploitationDto, @Req() request : Request) {
        return this.exploitationChargeExploitationService.delete(exploitationChargeExploitationId); 
    }

    @ApiBearerAuth()
    @UseGuards(AuthGuard('jwt'))
    @Put("update/:id")
    update(
        @Param("id", ParseIntPipe) exploitationChargeExploitationId : number,
        @Body() updateExploitationChargeExploitationDto: UpdateExploitationChargeExploitationDto,
        ) {
        return this.exploitationChargeExploitationService.update(exploitationChargeExploitationId, updateExploitationChargeExploitationDto); 
    }
   
    
    
}


import {
  Body,
  Controller,
  Delete,
  Get,
  Param,
  ParseIntPipe,
  Post,
  Put,
  Query,
  Req,
} from '@nestjs/common';
import { UseGuards } from '@nestjs/common/decorators/core/use-guards.decorator';
import { ExploitationService } from './exploitation.service';
import { AuthGuard } from '@nestjs/passport';
import { CreateExploitationDto, UpdateExploitationDto } from './dto/exploitation.dto';
import { Request } from 'express';
import { ApiBearerAuth, ApiTags } from '@nestjs/swagger';
import { GetCreditParamsDTO, ICredit } from 'src/credits/credit/dto/credit.dto';

@ApiTags('Exploitation')
@Controller('exploitations')
export class ExploitationController {
  constructor(private readonly exploitationService: ExploitationService) {}

  @Get('/all')
  getAll() {
    return this.exploitationService.getAll();
  }

  @Get()
  async getAllCreditsWithFilters(
    @Query() params: GetCreditParamsDTO,
  ): Promise<ICredit[]> {
    return this.exploitationService.getAllCreditsWithFilters(params);
  }

  @Get('/custom')
  getAllCustom() {
    return this.exploitationService.getAllCustom();
  }

  @Get('/:id')
  get(
    @Param('id', ParseIntPipe) exploitationId: number,
    createExploitationDto: CreateExploitationDto,
  ) {
    return this.exploitationService.getOne(exploitationId);
  }

  @ApiBearerAuth()
  @UseGuards(AuthGuard('jwt'))
  @Post('create')
  create(@Body() createExploitationDto: CreateExploitationDto) {
    return this.exploitationService.create(createExploitationDto);
  }

  @ApiBearerAuth()
  @UseGuards(AuthGuard('jwt'))
  @Delete('delete/:id')
  delete(
    @Param('id', ParseIntPipe) exploitationId: number,
    createExploitationDto: CreateExploitationDto,
    @Req() request: Request,
  ) {
    return this.exploitationService.delete(exploitationId);
  }

  @ApiBearerAuth()
  @UseGuards(AuthGuard('jwt'))
  @Put('update/:id')
  update(
    @Param('id', ParseIntPipe) exploitationId: number,
    @Body() updateExploitationDto: UpdateExploitationDto,
  ) {
    return this.exploitationService.update(
      exploitationId,
      updateExploitationDto,
    );
  }
}

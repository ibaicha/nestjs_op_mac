import { ForbiddenException, Injectable, NotFoundException } from '@nestjs/common';
import { PrismaService } from 'src/prisma/prisma.service';
import { CreateRecolteDto } from './dto/createRecolte.dto';
import { UpdateRecolteDto } from './dto/updateRecolte.dto';



@Injectable()
export class RecolteService {
    constructor(private readonly prismaService: PrismaService) { }

    async getAll() {
        return this.prismaService.recolte.findMany(
            {
                select: {
                    id: true,
                    date: true,
                    pu: true,
                    nombre_unite: true,
                    nombre_emballage: true,
                    valeur: true,
                    exploitation: {
                        select: {
                            id: true,
                            compte: true,
                            date: true,
                            unite: true,
                            //pu: true,
                            surface: true,
                            //production: true,
                            createdAt: true,
                            updatedAt: true,
                        }
                    },
                    variete: {
                        select: {
                            id: true,
                            name: true,
                            surface_unite: true,
                            quantite_unite: true,
                            rendement_unite: true,
                            isActive: true
                        }
                    },
                    emballage: {
                        select: {
                            name: true,
                            conditionnement: true,
                            quantite: true,
                            pu: true,
                            valeur: true,
                            isActive: true,
                            isDefault: true
                        }
                    }
                },
            }

        );

    }

    async getAllRecoltesFromExploitation(exploitationId: number) {
        return this.prismaService.recolte.findMany(
            {
                select: {
                    id: true,
                    date: true,
                    pu: true,
                    nombre_unite: true,
                    nombre_emballage: true,
                    valeur: true,
                    exploitation: {
                        select: {
                            id: true,
                            compte: true,
                            date: true,
                            unite: true,
                            //pu: true,
                            surface: true,
                            //production: true,
                            createdAt: true,
                            updatedAt: true,
                        }
                    },
                    variete: {
                        select: {
                            id: true,
                            name: true,
                            surface_unite: true,
                            quantite_unite: true,
                            rendement_unite: true,
                            isActive: true
                        }
                    },
                    emballage: {
                        select: {
                            name: true,
                            conditionnement: true,
                            quantite: true,
                            pu: true,
                            valeur: true,
                            isActive: true,
                            isDefault: true
                        }
                    }
                },
                where: {
                    exploitation: {
                        id: exploitationId
                    }
                }
            }

        );

    }

    async getByExploitation(exploitationId: number) {
        const recolte = await this.prismaService.recolte.findMany({ where: { exploitationId: exploitationId },
            select: {
                id: true,
                date: true,
                pu: true,
                nombre_unite: true,
                nombre_emballage: true,
                valeur: true,
                exploitation: {
                    select: {
                        id: true,
                        compte: true,
                        date: true,
                        unite: true,
                        surface: true,
                        createdAt: true,
                        updatedAt: true,
                    }
                },
                variete: {
                    select: {
                        id: true,
                        name: true,
                        surface_unite: true,
                        quantite_unite: true,
                        rendement_unite: true,
                        isActive: true
                    }
                },
                emballage: {
                    select: {
                        name: true,
                        conditionnement: true,
                        quantite: true,
                        pu: true,
                        valeur: true,
                        isActive: true,
                        isDefault: true
                    }
                }
            }, });
        if (!recolte) throw new NotFoundException('Post not found');
        return recolte;
    }

    async getOne(recolteId: number) {
        const recolte = await this.prismaService.recolte.findUnique({ where: { id: recolteId },
            select: {
                id: true,
                date: true,
                pu: true,
                nombre_unite: true,
                nombre_emballage: true,
                valeur: true,
                exploitation: {
                    select: {
                        id: true,
                        compte: true,
                        date: true,
                        unite: true,
                        surface: true,
                        createdAt: true,
                        updatedAt: true,
                    }
                },
                variete: {
                    select: {
                        id: true,
                        name: true,
                        surface_unite: true,
                        quantite_unite: true,
                        rendement_unite: true,
                        isActive: true
                    }
                },
                emballage: {
                    select: {
                        name: true,
                        conditionnement: true,
                        quantite: true,
                        pu: true,
                        valeur: true,
                        isActive: true,
                        isDefault: true
                    }
                }
            }, });
        if (!recolte) throw new NotFoundException('Post not found');
        return recolte;
    }

    async create(createRecolteDto: CreateRecolteDto) {
        const { date, pu, nombre_unite, nombre_emballage, valeur, exploitationId, varieteId, emballageId } = createRecolteDto;
        await this.prismaService.recolte.create({ data: { date, pu, nombre_unite, nombre_emballage, valeur, exploitationId, varieteId, emballageId } });
        return { data: "Recolte created" };
    }

    async update(recolteId: number, updateRecolteDto: UpdateRecolteDto) {
        const recolte = await this.prismaService.recolte.findUnique({ where: { id: recolteId } });
        if (!recolte) throw new NotFoundException('Recolte not found');
        await this.prismaService.recolte.update({ where: { id: recolteId }, data: { ...updateRecolteDto } });
        return { data: "Recolte updeted!" };
    }

    async delete(recolteId: number) {
        const recolte = await this.prismaService.recolte.findUnique({ where: { id: recolteId } });
        if (!recolte) throw new NotFoundException('Post not found');
        await this.prismaService.recolte.delete({ where: { id: recolteId } });
        return { data: "Recolte deleted" };
    }
}



